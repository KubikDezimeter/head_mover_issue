#!/usr/bin/env python
PACKAGE = "bitbots_visual_compass"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


group_ros_handler = gen.add_group("ROS handler", type="tab")
group_dummy_handler = gen.add_group("Dummy handler", type="tab")
group_compass = gen.add_group("Compass", type="tab")

group_compass_settings = group_compass.add_group("Compass")

group_compass_binary = group_compass_settings.add_group("Binary")
group_compass_multiple = group_compass_settings.add_group("Multiple")

group_compass_akaze = group_compass.add_group("Akaze")
group_compass_orb = group_compass.add_group("Orb")
group_compass_sift = group_compass.add_group("Sift")

compass_matcher_enum = gen.enum([gen.const("akaze", str_t, "akaze", "Akaze matcher"),
                                 gen.const("orb", str_t, "orb", "Orb matcher"),
                                 gen.const("sift", str_t, "sift", "SIFT matcher")],
                                "Choose from these matcher types")

group_ros_handler.add("ROS_handler_img_msg_topic", str_t, 0, "ROS_img_msg_topic", None)
group_ros_handler.add("ROS_handler_img_queue_size", int_t, 0, "ROS_img_queue_size", min=1, max=20)
group_ros_handler.add("ROS_handler_action_server_name", str_t, 0, "ROS_handler_action_server_name", None)

group_dummy_handler.add("dummy_handler_input", str_t, 0, "Image input", None)

group_compass_settings.add("compass_type", str_t, 0, "Compass type", None)
group_compass_settings.add("compass_matcher", str_t, 0, "Compass matcher", "akaze", edit_method=compass_matcher_enum)

group_compass_multiple.add("compass_multiple_sample_count", int_t, 0, "Count of truth reference images", min=2, max=360)

group_compass_akaze.add("compass_akaze_match_distance_scalar", double_t, 0, "compass_akaze_match_distance_scalar", None)

group_compass_orb.add("compass_orb_max_feature_count", int_t, 0, "maximal feature count")
group_compass_orb.add("compass_orb_match_distance_scalar", double_t, 0, "match_distance_scalar")

exit(gen.generate(PACKAGE, "bitbots_visual_compass", "VisualCompass"))
